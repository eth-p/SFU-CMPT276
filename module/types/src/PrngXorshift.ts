//! --------------------------------------------------------------------------------------------------------------------
//! Copyright (C) 2019 Team Chipotle
//! MIT License
//! --------------------------------------------------------------------------------------------------------------------
import Random from '@chipotle/types/Random';
// ---------------------------------------------------------------------------------------------------------------------

/**
 * A pseudo random number generator using the Xorshift32 algorithm.
 * https://en.wikipedia.org/wiki/Xorshift#Example_implementation
 */
class PrngXorshift implements Random {
	// -------------------------------------------------------------------------------------------------------------
	// | Constants:                                                                                                |
	// -------------------------------------------------------------------------------------------------------------

	protected static MAX: number = Math.pow(2, 32);

	// -------------------------------------------------------------------------------------------------------------
	// | Fields:                                                                                                   |
	// -------------------------------------------------------------------------------------------------------------

	public state: number;

	// -------------------------------------------------------------------------------------------------------------
	// | Constructors:                                                                                             |
	// -------------------------------------------------------------------------------------------------------------

	public constructor(seed?: number) {
		this.state = seed == null ? Math.random() * PrngXorshift.MAX : seed;
	}

	// -------------------------------------------------------------------------------------------------------------
	// | Methods:                                                                                                  |
	// -------------------------------------------------------------------------------------------------------------

	public nextInt(arg1: number, arg2?: number): number {
		const min = arg2 == null ? 0 : arg1;
		const max = arg2 == null ? arg1 : arg2;

		return Math.floor(this.nextFloat() * (max - min)) + min;
	}

	public nextFloat(): number {
		const x = this.state;
		this.generate();
		return x / PrngXorshift.MAX + 0.5;
	}

	// -------------------------------------------------------------------------------------------------------------
	// | Internal:                                                                                                 |
	// -------------------------------------------------------------------------------------------------------------

	protected generate(): void {
		let x = this.state;
		x ^= x << 13;
		x ^= x >> 17;
		x ^= x << 5;
		this.state = x;
	}
}

// ---------------------------------------------------------------------------------------------------------------------
export default PrngXorshift;
export {PrngXorshift};
