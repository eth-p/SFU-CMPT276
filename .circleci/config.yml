version: 2.1
references:

  workspace_root: &workspace_root
                    /tmp/workspace

  workspace_load: &workspace_load
    attach_workspace:
      at: *workspace_root

# ----------------------------------------------------------------------------------------------------------------------

executors:
  standard:
    docker:
      - image: ethp/sfu-cmpt276

# ----------------------------------------------------------------------------------------------------------------------

jobs:

  # ------------------------------------------------------------------------------------------------------------------
  # Job: init
  # Initializes the build environment.
  # ------------------------------------------------------------------------------------------------------------------

  init:
    working_directory: *workspace_root
    executor: standard
    steps:

      - checkout:
          name: Repository

      - run:
          name: Repository (Initialize)
          command: |
            git lfs install
            git submodule update --init --recursive

      - restore_cache:
          name: Node Dependencies (Cached)
          keys: ['v1-npm-cache-{{ checksum "package-lock.json" }}-{{ .Branch }}']

      - run:
          name: Node Dependencies
          command: |
            [ -d node_modules ] || npm install

      - run:
          name: Bypass SCT Setup
          command: |
            mkdir -p .tmp || true
            touch .tmp/sct-setup

      - save_cache:
          name: Node Dependencies (Save)
          key: 'v1-npm-cache-{{ checksum "package-lock.json" }}-{{ .Branch }}'
          paths:
            - node_modules

      - persist_to_workspace:
          root: *workspace_root
          paths: ['*']

  # --------------------------------------------------------------------------------------------------------------
  # Job: validate
  # Validates the source code.
  # This will ensure consistent style and prevent unwanted "f***"-ups (i.e. cursing).
  # --------------------------------------------------------------------------------------------------------------

  validate:
    working_directory: *workspace_root
    executor: standard
    steps:

      - *workspace_load
      - run:
          name: Source Code
          command: ./sct check --plumbing

  # --------------------------------------------------------------------------------------------------------------
  # Job: build
  # Builds the project.
  # --------------------------------------------------------------------------------------------------------------

  build:
    working_directory: *workspace_root
    executor: standard
    parameters:
      args:
        description: Build arguments.
        default: ''
        type: string

    steps:
      - *workspace_load
      - run:
          name: Prepare
          command: mkdir -p target artifacts || true
      - run:
          name: Fetch
          command: .script/sct/libexec/get-repository-stats.js
      - run:
          name: Build
          command: ./sct build << parameters.args >>
      - persist_to_workspace:
          root: *workspace_root
          paths:
            - out

  # --------------------------------------------------------------------------------------------------------------
  # Job: test
  # Tests the project.
  # --------------------------------------------------------------------------------------------------------------

  test:
    working_directory: *workspace_root
    executor: standard
    steps:
      - *workspace_load
      - run:
          name: Tests
          command: ./sct test --workers=2

  # --------------------------------------------------------------------------------------------------------------
  # Job: release
  # Releases the latest version of the project.
  # --------------------------------------------------------------------------------------------------------------

  release:
    working_directory: *workspace_root
    executor: standard

    steps:
      - *workspace_load
      - run:
          name: Compile Electron
          command: ./sct build elec-emu --release
      - run:
          name: Package Electron
          command: .script/package/package.sh
      - store_artifacts:
          name: Store
          path: artifacts/


# ----------------------------------------------------------------------------------------------------------------------

workflows:
  version: 2

  # ------------------------------------------------------------------------------------------------------------------
  # Build: development
  # Pipeline:
  #
  #   init -> validate -> build -> test
  #
  # ------------------------------------------------------------------------------------------------------------------

  development:

    jobs:
      - init:
          filters:
            tags:
              ignore: /.*/
      - validate:
          requires: [init]
          filters:
            tags:
              ignore: /.*/
      - build:
          requires: [init, validate]
          args: '--keep:comments --keep:asserts'
          filters:
            tags:
              ignore: /.*/
      - test:
          requires: [init, validate, build]
          filters:
            tags:
              ignore: /.*/


  # ------------------------------------------------------------------------------------------------------------------
  # Build: release
  # Pipeline:
  #
  #   init -> validate -> build -> test -> release
  #
  # ------------------------------------------------------------------------------------------------------------------

  release:

    jobs:
      - init:
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - validate:
          requires: [init]
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - build:
          requires: [init, validate]
          args: '--release --minify'
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - test:
          requires: [init, validate, build]
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
      - release:
          requires: [init, validate, build, test]
          filters:
            tags:
              only: /^v.*/
            branches:
              only: /^master$/
